<?xml version="1.0" encoding="utf-8" ?>
<ContentPage x:Class="Bluestone.Presentation.Views.Account.SettingsPage"
             xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:animations="clr-namespace:Bluestone.Presentation.Animations;assembly=Bluestone.Presentation"
             xmlns:templates="clr-namespace:Bluestone.Presentation.Views.Templates;assembly=Bluestone.Presentation"
             xmlns:triggers="clr-namespace:Bluestone.Presentation.Triggers;assembly=Bluestone.Presentation"
             xmlns:viewModelBase="clr-namespace:Bluestone.Presentation.ViewModels.Base;assembly=Bluestone.Presentation"
             xmlns:viewmodels="clr-namespace:Bluestone.Presentation.ViewModels.Account"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             Title="Preferences"
             viewModelBase:ViewModelLocator.AutoWireViewModel="true"
             x:DataType="viewmodels:SettingsViewModel">

    <ContentPage.ToolbarItems>
        <ToolbarItem Icon="{StaticResource ChevronDownIconImageSource}"
                     Order="Primary"
                     Priority="0" />
        <ToolbarItem Icon="{StaticResource SearchIconImageSource}"
                     Order="Primary"
                     Priority="0" />
    </ContentPage.ToolbarItems>

    <ContentPage.Content>
        <StackLayout>
            <StackLayout Orientation="Horizontal"
                         BackgroundColor="Olive">
                <Label Text="Fingerprint "
                       HorizontalOptions="StartAndExpand" />

                <Switch VerticalOptions="Start"
                        IsToggled="{Binding IsBiometric, Mode=TwoWay}">
                    <Switch.Behaviors>
                        <xct:EventToCommandBehavior EventName="Toggled"
                                                    Command="{Binding BiometricCommand}" />
                    </Switch.Behaviors>

                </Switch>
                <Label Text="{Binding FingerPrintErrors}" />
            </StackLayout>

            <StackLayout Orientation="Horizontal"
                         BackgroundColor="Olive">
                <Label Text="Full screen"
                       HorizontalOptions="StartAndExpand" />

                <Switch VerticalOptions="Start"
                        IsToggled="{Binding IsFullScreen, Mode=TwoWay}">
                    <Switch.Behaviors>
                        <xct:EventToCommandBehavior EventName="Toggled"
                                                    Command="{Binding FullScreenCommand}" />
                    </Switch.Behaviors>

                </Switch>
            </StackLayout>

            <StackLayout Orientation="Horizontal"
                         BackgroundColor="Olive">
                <Label Text="Theme"
                       HorizontalOptions="StartAndExpand" />

                <!--<Switch VerticalOptions="Start"
                        IsToggled="{Binding IsLightTheme, Mode=TwoWay}">
                    <Switch.Behaviors>
                        <xct:EventToCommandBehavior EventName="Toggled"
                                                    Command="{Binding ThemeCommand}" />
                    </Switch.Behaviors>

                </Switch>-->

                <StackLayout RadioButtonGroup.GroupName="ThemeButtonGroup">
                    <RadioButton Content="System"
                                 IsChecked="True">
                        <RadioButton.Behaviors>
                            <xct:EventToCommandBehavior EventName="CheckedChanged"
                                                        Command="{Binding SystemThemeCommand}" />
                        </RadioButton.Behaviors>
                    </RadioButton>
                    <RadioButton Content="Light">
                        <RadioButton.Behaviors>
                            <xct:EventToCommandBehavior EventName="CheckedChanged"
                                                        Command="{Binding LightThemeCommand}" />
                        </RadioButton.Behaviors>
                    </RadioButton>
                    <RadioButton Content="Dark">
                        <RadioButton.Behaviors>
                            <xct:EventToCommandBehavior EventName="CheckedChanged"
                                                        Command="{Binding DarkThemeCommand}" />
                        </RadioButton.Behaviors>
                    </RadioButton>
                </StackLayout>
                
            </StackLayout>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>